{"version":3,"sources":["webpack:///./components/index.js?668b","webpack:///./components/utils.js?a7dd"],"names":[],"mappings":"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","file":"0.807c424bbb3367c0256d.hot-update.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as utils from './utils.js';\nimport Card from './Card'\nimport {newDeck} from \"./utils\";\nimport {findDOMNode} from 'react-dom';\n\n\nclass DeckOfCards extends React.Component {\n\n    constructor() {\n        super();\n        this.returnCards = this.returnCards.bind(this);\n        this.restart = this.restart.bind(this);\n        this.drop = this.drop.bind(this);\n        let deck = utils.newDeck();\n        this.state = {\n            deck: utils.newDeck(),\n            reset: false\n        };\n    }\n\n    restart() {\n        this.setState({\n            reset: true,\n        });\n\n        window.location.reload(true);\n\n    }\n\n    drop(ev) {\n        ev.preventDefault();\n        let data = ev.dataTransfer.getData(\"text\");\n        let elem = document.getElementById(data);\n\n        console.log('ev.target',);\n        let holderVal = ev.target.getAttribute('value');\n        let dropVal = elem.getAttribute('value');\n        if (holderVal == dropVal) {\n            elem.style.left = 'auto';\n            elem.style.top = 'auto';\n            elem.style.margin = '-1px';\n            ev.target.appendChild(elem);\n            if (document.getElementById('cards-container').childElementCount == 0) {\n                // All cards placed. Add restart button\n                this.setState({\n                    showRestart: true\n                });\n\n            }\n\n        }\n\n\n    }\n\n    allowDrop(ev) {\n        ev.preventDefault();\n    }\n\n    onDragStart(ev) {\n        ev.dataTransfer.setData(\"text\", ev.target.id);\n    }\n\n    returnCards(data, itr) {\n        let card = <Card indexId={'card' + itr} onDragStart={this.onDragStart} value={data}/>;\n        return (card)\n    }\n\n    shuffle() {\n        let skip_height = $('#cards-container').height();\n        $('#cards-container').ready(function () {\n            $('.card-container').each(function () {\n\n                let holder = $(this).parent();\n                let divWidth = holder.width();\n                let divHeight = holder.height();\n\n                $(this).css({\n                    'left': Math.floor(Math.random() * Number(divWidth)),\n                    'top': (Math.floor(Math.random() * Number(divHeight))) + (skip_height / 2.5)\n                });\n\n            })\n        });\n    }\n\n    componentDidMount() {\n        this.shuffle()\n    }\n\n    render() {\n        return (\n            <div className=\"main-container\">\n                <div className=\"child-30\">\n                    <div className=\"div-by-4\">\n                        <div className=\"card-holder\" id=\"spades-holder\" onDrop={this.drop} onDragOver={this.allowDrop}>\n                            {\n                                this.state.reset ? null :\n                                    <div className=\"drop-container\" value=\"spades\" onDrop={this.drop}\n                                         onDragOver={this.allowDrop}>\n\n                                    </div>\n                            }\n\n                            {\n                                this.state.reset ? null :\n                                    <div className=\"empty-holder-b\"><p className=\"empty-text\">Place spades here</p>\n                                        <p>&spades;</p></div>\n                            }\n                        </div>\n                    </div>\n                    <div className=\"div-by-4\">\n                        <div className=\"card-holder\" id=\"clubs-holder\" onDrop={this.drop} onDragOver={this.allowDrop}>\n                            {\n                                this.state.reset ? null :\n                                    <div className=\"drop-container\" value=\"clubs\" onDrop={this.drop}\n                                         onDragOver={this.allowDrop}>\n\n                                    </div>\n                            }\n\n                            {\n                                this.state.reset ? null :\n                                    <div className=\"empty-holder-b\"><p className=\"empty-text\">Place clubs here</p>\n                                        <p>&clubs;</p></div>\n                            }\n\n\n                        </div>\n                    </div>\n                    <div className=\"div-by-4\">\n                        <div className=\"card-holder\" id=\"hearts-holder\" onDrop={this.drop} onDragOver={this.allowDrop}>\n\n                            {\n                                this.state.reset ? null :\n                                    <div className=\"drop-container\" value=\"hearts\" onDrop={this.drop}\n                                         onDragOver={this.allowDrop}>\n\n                                    </div>\n                            }\n\n                            {\n                                this.state.reset ? null :\n                                    <div className=\"empty-holder-r\"><p className=\"empty-text\">Place hearts here</p>\n                                        <p>&hearts;</p></div>\n                            }\n\n                        </div>\n                    </div>\n                    <div className=\"div-by-4\">\n                        <div className=\"card-holder\" id=\"diamonds-holder\" onDrop={this.drop}\n                             onDragOver={this.allowDrop}>\n                            {\n                                this.state.reset ? null :\n                                    <div className=\"drop-container\" value=\"diamonds\" onDrop={this.drop}\n                                         onDragOver={this.allowDrop}>\n\n                                    </div>\n                            }\n                            {\n                                this.state.reset ? null :\n                                    <div className=\"empty-holder-r\"><p className=\"empty-text\">Place diamonds here</p>\n                                        <p>&diams;</p></div>\n                            }\n\n\n                        </div>\n                    </div>\n\n                </div>\n                <div className=\"child-70\" ref=\"cardsContainer\" id=\"cards-container\" onDrop={this.drop}\n                     onDragOver={this.allowDrop}>\n                    {\n                        this.state.showRestart ?\n                            <button className=\"restart-btn\" onClick={this.restart}>Restart</button> : null\n                    }\n                    {\n                        this.state.deck.map(this.returnCards)\n                    }\n                </div>\n            </div>\n        )\n    }\n\n}\n\nReactDOM.render(\n    <DeckOfCards/>\n    , document.getElementById('app')\n)\n\n\n// WEBPACK FOOTER //\n// ./components/index.js","export function newDeck() {\n    let suites = ['hearts', 'spades', 'clubs', 'diamonds'];\n    let suites_color = {\n        'hearts': 'R',\n        'diamonds': 'R',\n        'spades': 'B',\n        'clubs': 'B',\n    }\n    let deck = [];\n    let deck_limit = 14;\n    let value_mapper = {\n        '1': 'A', '2': '2',\n        '3': '3', '4': '4',\n        '5': '5', '6': '6',\n        '7': '7', '8': '8',\n        '9': '9', '10': '10',\n        '11': 'J', '12': 'Q',\n        '13': 'K',\n    };\n    for (let i = 0; i < suites.length; i++) {\n        for (let j = 1; j < deck_limit; j++) {\n            deck.push({\n                'value': j,\n                'text': value_mapper[j],\n                'suite': suites[i],\n                'color': suites_color[suites[i]]\n            })\n            break\n        }\n    }\n    let arr = []\n\n    // Randomizing array here\n    arr = shuffle(deck)\n    return arr;\n}\n\nfunction shuffle(array) {\n    var currentIndex = array.length, temporaryValue, randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n\n        // Pick a remaining element...\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n\n        // And swap it with the current element.\n        temporaryValue = array[currentIndex];\n        array[currentIndex] = array[randomIndex];\n        array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n}\n\n\n// WEBPACK FOOTER //\n// ./components/utils.js"],"sourceRoot":""}